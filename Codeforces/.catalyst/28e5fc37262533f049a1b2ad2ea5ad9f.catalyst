{"title":{"en":"C. Restoring the Duration of Tasks","ru":"C. Восстановление длительности выполнения заданий"},"contestId":"1690","problemIndex":"C","timeLimit":{"en":"2 seconds","ru":"2 секунды"},"memLimit":{"en":"256 megabytes","ru":"256 мегабайт"},"inputFormat":{"en":"standard input","ru":"стандартный ввод"},"outputFormat":{"en":"standard output","ru":"стандартный вывод"},"problemHtml":{"en":"<p>Recently, Polycarp completed $$$n$$$ successive tasks.</p><p>For each completed task, the time $$$s_i$$$ is known when it was given, no two tasks were given at the same time. Also given is the time $$$f_i$$$ when the task was completed. For each task, there is an unknown value $$$d_i$$$ ($$$d_i&gt;0$$$)&nbsp;— <span class=\"tex-font-style-bf\">duration of task execution</span>.</p><p>It is known that the tasks were completed in the order in which they came. Polycarp performed the tasks as follows:</p><ul> <li> As soon as the very first task came, Polycarp immediately began to carry it out. </li><li> If a new task arrived before Polycarp finished the previous one, he put the new task at the end of the queue. </li><li> When Polycarp finished executing the next task and the queue was not empty, he <span class=\"tex-font-style-bf\">immediately</span> took a new task from the head of the queue (if the queue is empty — he just waited for the next task). </li></ul><p>Find $$$d_i$$$ (duration) of each task.</p>","ru":"<p>Недавно Поликарп выполнил $$$n$$$ последовательно пришедших заданий. </p><p>Для каждого выполненного задания известно время $$$s_i$$$, когда оно было дано, никакие два задания не были даны в одно и то же время. Также дано время $$$f_i$$$, когда задание было выполнено. Для каждого задания есть неизвестная величина $$$d_i$$$ ($$$d_i&gt;0$$$)&nbsp;— <span class=\"tex-font-style-bf\">длительность выполнения задания</span>. </p><p>Известно, что задания были выполнены в том порядке, в котором пришли. Поликарп выполнял задания следующим образом:</p><ul> <li> Как только пришло самое первое задание, Поликарп сразу начал его выполнять. </li><li> Если приходило новое задание, пока Поликарп еще не закончил выполнять предыдущее, он ставил новое задание в конец очереди. </li><li> Когда Поликарп заканчивал выполнять очередное задание и очередь была не пуста, он <span class=\"tex-font-style-bf\">сразу</span> брал из головы очереди новое задание (если очередь пуста — он просто ожидал следующего задания). </li></ul><p>Найдите $$$d_i$$$ (длительность выполнения) каждого задания.</p>"},"inSpecsHtml":{"en":"<div class=\"section-title\">Input</div><p>The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$)&nbsp;— the number of test cases.</p><p>The descriptions of the input data sets follow.</p><p>The first line of each test case contains one integer $$$n$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$).</p><p>The second line of each test case contains exactly $$$n$$$ integers $$$s_1 &lt; s_2 &lt; \\dots &lt; s_n$$$ ($$$0 \\le s_i \\le 10^9$$$).</p><p>The third line of each test case contains exactly $$$n$$$ integers $$$f_1 &lt; f_2 &lt; \\dots &lt; f_n$$$ ($$$s_i &lt; f_i \\le 10^9$$$).</p><p>It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.</p>","ru":"<div class=\"section-title\">Входные данные</div><p>В первой строке записано единственное число $$$t$$$ ($$$1 \\le t \\le 10^4$$$)&nbsp;— количество наборов входных данных в тесте.</p><p>Далее следуют описания наборов входных данных.</p><p>В первой строке каждого набора входных данных содержится одно целое число $$$n$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$).</p><p>Во второй строке каждого набора входных данных записано ровно $$$n$$$ целых чисел $$$s_1 &lt; s_2 &lt; \\dots &lt; s_n$$$ ($$$0 \\le s_i \\le 10^9$$$).</p><p>В третьей строке каждого набора входных данных записано ровно $$$n$$$ целых чисел $$$f_1 &lt; f_2 &lt; \\dots &lt; f_n$$$ ($$$s_i &lt; f_i \\le 10^9$$$).</p><p>Гарантируется, что сумма $$$n$$$ по всем наборам входных данных не превышает $$$2 \\cdot 10^5$$$.</p>"},"outSpecsHtml":{"en":"<div class=\"section-title\">Output</div><p>For each of $$$t$$$ test cases print $$$n$$$ positive integers $$$d_1, d_2, \\dots, d_n$$$&nbsp;— the duration of each task.</p>","ru":"<div class=\"section-title\">Выходные данные</div><p>Для каждого из $$$t$$$ наборов входных данных выведите $$$n$$$ положительных целых чисел $$$d_1, d_2, \\dots, d_n$$$&nbsp;— длительности выполнения каждого задания.</p>"},"noteHtml":{"en":"<div class=\"section-title\">Note</div><p>First test case:</p><p>The queue is empty at the beginning: $$$[ ]$$$. And that's where the first task comes in. At time $$$2$$$, Polycarp finishes doing the first task, so the duration of the first task is $$$2$$$. The queue is empty so Polycarp is just waiting.</p><p>At time $$$3$$$, the second task arrives. And at time $$$7$$$, the third task arrives, and now the queue looks like this: $$$[7]$$$.</p><p>At the time $$$10$$$, Polycarp finishes doing the second task, as a result, the duration of the second task is $$$7$$$.</p><p>And at time $$$10$$$, Polycarp immediately starts doing the third task and finishes at time $$$11$$$. As a result, the duration of the third task is $$$1$$$.</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/87c3ebe61c499369c2ff3dcc9aea759668dd0ef4.png\" style=\"max-width: 100.0%;max-height: 100.0%;\">   <span class=\"tex-font-size-small\">An example of the first test case.</span> </center>","ru":"<div class=\"section-title\">Примечание</div><p>Первый набор входных данных:</p><p>В начале очередь пуста: $$$[ ]$$$. И туда сразу приходит первое задание. В момент времени $$$2$$$ Поликарп заканчивает делать первое задание, соответственно, длительность выполнения первого задания&nbsp;— $$$2$$$. Очередь пуста, поэтому Поликарп просто ждёт.</p><p>В момент времени $$$3$$$ приходит второе задание. А в момент времени $$$7$$$ приходит третье задание, и теперь очередь выглядит так: $$$[7]$$$.</p><p>В момент времени $$$10$$$ Поликарп заканчивает делать второе задание, в итоге длительность выполнения второго задания&nbsp;— $$$7$$$. </p><p>И в момент времени $$$10$$$ Поликарп сразу начинает делать третье задание и заканчивает в момент времени $$$11$$$. В итоге длительность выполнения третьего задания&nbsp;— $$$1$$$.</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/87c3ebe61c499369c2ff3dcc9aea759668dd0ef4.png\" style=\"max-width: 100.0%;max-height: 100.0%;\">   <span class=\"tex-font-size-small\">Пример первого набора входных данных.</span> </center>"},"sampleTestcases":[{"id":1654707317271,"input":"4\n3\n0 3 7\n2 10 11\n2\n10 15\n11 16\n9\n12 16 90 195 1456 1569 3001 5237 19275\n13 199 200 260 9100 10000 10914 91066 5735533\n1\n0\n1000000000\n","output":"2 7 1 \n1 1 \n1 183 1 60 7644 900 914 80152 5644467 \n1000000000 \n"}],"submitUrl":"https://codeforces.com/contest/1690/submit","language":"python"}