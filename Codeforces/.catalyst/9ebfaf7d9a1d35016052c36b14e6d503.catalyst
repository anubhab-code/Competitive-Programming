{"title":{"en":"A. Simply Strange Sort","ru":"A. Простая странная сортировка"},"contestId":"1561","problemIndex":"A","timeLimit":{"en":"2 seconds","ru":"2 секунды"},"memLimit":{"en":"512 megabytes","ru":"512 мегабайт"},"inputFormat":{"en":"standard input","ru":"стандартный ввод"},"outputFormat":{"en":"standard output","ru":"стандартный вывод"},"problemHtml":{"en":"<p>You have a permutation: an array $$$a = [a_1, a_2, \\ldots, a_n]$$$ of distinct integers from $$$1$$$ to $$$n$$$. The length of the permutation $$$n$$$ is odd.</p><p>Consider the following algorithm of sorting the permutation in increasing order.</p><p>A helper procedure of the algorithm, $$$f(i)$$$, takes a single argument $$$i$$$ ($$$1 \\le i \\le n-1$$$) and does the following. If $$$a_i &gt; a_{i+1}$$$, the values of $$$a_i$$$ and $$$a_{i+1}$$$ are exchanged. Otherwise, the permutation doesn't change.</p><p>The algorithm consists of iterations, numbered with consecutive integers starting with $$$1$$$. On the $$$i$$$-th iteration, the algorithm does the following: </p><ul> <li> if $$$i$$$ is odd, call $$$f(1), f(3), \\ldots, f(n - 2)$$$; </li><li> if $$$i$$$ is even, call $$$f(2), f(4), \\ldots, f(n - 1)$$$. </li></ul><p>It can be proven that after a finite number of iterations the permutation will be sorted in increasing order.</p><p>After how many iterations will this happen for the first time?</p>","ru":"<p>У вас есть перестановка&nbsp;— массив $$$a = [a_1, a_2, \\ldots, a_n]$$$ из различных целых чисел от $$$1$$$ до $$$n$$$. Длина перестановки $$$n$$$ нечётна.</p><p>Рассмотрим следующий алгоритм сортировки перестановки по возрастанию.</p><p>Вспомогательная процедура алгоритма, $$$f(i)$$$, принимает на вход индекс $$$i$$$ ($$$1 \\le i \\le n-1$$$) и делает следующее. Если $$$a_i &gt; a_{i+1}$$$, значения $$$a_i$$$ и $$$a_{i+1}$$$ меняются местами. В противном случае перестановка остаётся без изменений.</p><p>Алгоритм состоит из итераций, пронумерованных последовательными целыми числами, начиная с $$$1$$$. На $$$i$$$-й итерации алгоритм делает следующее: </p><ul> <li> если $$$i$$$ нечётно, вызываются $$$f(1), f(3), \\ldots, f(n - 2)$$$; </li><li> если $$$i$$$ чётно, вызываются $$$f(2), f(4), \\ldots, f(n - 1)$$$. </li></ul><p>Можно доказать, что после конечного числа итераций перестановка станет отсортирована по возрастанию.</p><p>Через сколько итераций это впервые произойдёт?</p>"},"inSpecsHtml":{"en":"<div class=\"section-title\">Input</div><p>Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 100$$$). Description of the test cases follows.</p><p>The first line of each test case contains a single integer $$$n$$$ ($$$3 \\le n \\le 999$$$; $$$n$$$ is odd)&nbsp;— the length of the permutation.</p><p>The second line contains $$$n$$$ distinct integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\le a_i \\le n$$$)&nbsp;— the permutation itself. </p><p>It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$999$$$.</p>","ru":"<div class=\"section-title\">Входные данные</div><p>Во входных данных находятся несколько наборов входных данных. В первой строке находится одно целое число $$$t$$$ ($$$1 \\le t \\le 100$$$)&nbsp;— количество наборов входных данных. Далее следуют наборы входных данных.</p><p>Первая строка набора входных данных содержит одно целое число $$$n$$$ ($$$3 \\le n \\le 999$$$; $$$n$$$ нечётно)&nbsp;— длину перестановки.</p><p>Вторая строка содержит $$$n$$$ различных целых чисел $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\le a_i \\le n$$$)&nbsp;— саму перестановку.</p><p>Гарантируется, что сумма значений $$$n$$$ по всем наборам входных данных не превосходит $$$999$$$.</p>"},"outSpecsHtml":{"en":"<div class=\"section-title\">Output</div><p>For each test case print the number of iterations after which the permutation will become sorted in increasing order for the first time.</p><p>If the given permutation is already sorted, print $$$0$$$.</p>","ru":"<div class=\"section-title\">Выходные данные</div><p>Для каждого набора входных данных выведите число итераций, после которого заданная перестановка впервые окажется отсортирована по возрастанию.</p><p>Если заданная перестановка уже отсортирована, выведите $$$0$$$.</p>"},"noteHtml":{"en":"<div class=\"section-title\">Note</div><p>In the first test case, the permutation will be changing as follows: </p><ul> <li> after the $$$1$$$-st iteration: $$$[2, 3, 1]$$$; </li><li> after the $$$2$$$-nd iteration: $$$[2, 1, 3]$$$; </li><li> after the $$$3$$$-rd iteration: $$$[1, 2, 3]$$$. </li></ul><p>In the second test case, the permutation will be changing as follows: </p><ul> <li> after the $$$1$$$-st iteration: $$$[4, 5, 1, 7, 2, 3, 6]$$$; </li><li> after the $$$2$$$-nd iteration: $$$[4, 1, 5, 2, 7, 3, 6]$$$; </li><li> after the $$$3$$$-rd iteration: $$$[1, 4, 2, 5, 3, 7, 6]$$$; </li><li> after the $$$4$$$-th iteration: $$$[1, 2, 4, 3, 5, 6, 7]$$$; </li><li> after the $$$5$$$-th iteration: $$$[1, 2, 3, 4, 5, 6, 7]$$$. </li></ul><p>In the third test case, the permutation is already sorted and the answer is $$$0$$$.</p>","ru":"<div class=\"section-title\">Примечание</div><p>В первом наборе входных данных перестановка будет меняться следующим образом: </p><ul> <li> после $$$1$$$-й итерации: $$$[2, 3, 1]$$$; </li><li> после $$$2$$$-й итерации: $$$[2, 1, 3]$$$; </li><li> после $$$3$$$-й итерации: $$$[1, 2, 3]$$$. </li></ul><p>Во втором наборе входных данных перестановка будет меняться следующим образом: </p><ul> <li> после $$$1$$$-й итерации: $$$[4, 5, 1, 7, 2, 3, 6]$$$; </li><li> после $$$2$$$-й итерации: $$$[4, 1, 5, 2, 7, 3, 6]$$$; </li><li> после $$$3$$$-й итерации: $$$[1, 4, 2, 5, 3, 7, 6]$$$; </li><li> после $$$4$$$-й итерации: $$$[1, 2, 4, 3, 5, 6, 7]$$$; </li><li> после $$$5$$$-й итерации: $$$[1, 2, 3, 4, 5, 6, 7]$$$. </li></ul><p>В третьем наборе входных данных перестановка уже отсортирована, поэтому ответ равен $$$0$$$.</p>"},"sampleTestcases":[{"id":1640106466119,"input":"3\n3\n3 2 1\n7\n4 5 7 1 3 2 6\n5\n1 2 3 4 5\n","output":"3\n5\n0\n"}],"submitUrl":"https://codeforces.com/contest/1561/submit","language":"python"}