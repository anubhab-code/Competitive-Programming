{"title":{"en":"C. Numbers on Whiteboard","ru":"C. Числа на доске"},"contestId":"1430","problemIndex":"C","timeLimit":{"en":"2 seconds","ru":"2 секунды"},"memLimit":{"en":"256 megabytes","ru":"256 мегабайт"},"inputFormat":{"en":"standard input","ru":"стандартный ввод"},"outputFormat":{"en":"standard output","ru":"стандартный вывод"},"problemHtml":{"en":"<p>Numbers $$$1, 2, 3, \\dots n$$$ (each integer from $$$1$$$ to $$$n$$$ once) are written on a board. In one operation you can erase any two numbers $$$a$$$ and $$$b$$$ from the board and write one integer $$$\\frac{a + b}{2}$$$ <span class=\"tex-font-style-it\">rounded up</span> instead.</p><p>You should perform the given operation $$$n - 1$$$ times and make the resulting number that will be left on the board as small as possible. </p><p>For example, if $$$n = 4$$$, the following course of action is optimal:</p><ol> <li> choose $$$a = 4$$$ and $$$b = 2$$$, so the new number is $$$3$$$, and the whiteboard contains $$$[1, 3, 3]$$$; </li><li> choose $$$a = 3$$$ and $$$b = 3$$$, so the new number is $$$3$$$, and the whiteboard contains $$$[1, 3]$$$; </li><li> choose $$$a = 1$$$ and $$$b = 3$$$, so the new number is $$$2$$$, and the whiteboard contains $$$[2]$$$. </li></ol><p>It's easy to see that after $$$n - 1$$$ operations, there will be left only one number. Your goal is to minimize it.</p>","ru":"<p>На доске записаны целые числа $$$1, 2, 3, \\dots n$$$ (то есть все целые числа от $$$1$$$ до $$$n$$$ по одному разу). Вы можете за одну операцию стереть с доски два любых числа $$$a$$$ и $$$b$$$ и вместо них записать новое число, равное $$$\\frac{a + b}{2}$$$ <span class=\"tex-font-style-it\">округленному вверх</span>.</p><p>Вы должны выполнить ровно $$$n - 1$$$ описанную операцию, при этом число, которое будет записано на доске в ходе последней операции, должно быть минимально возможным. </p><p>Например, если $$$n = 4$$$, то следующая последовательность действий является оптимальной:</p><ol> <li> выбрать $$$a = 4$$$ и $$$b = 2$$$, тогда вы запишете $$$3$$$, и на доске останутся числа $$$[1, 3, 3]$$$; </li><li> выбрать $$$a = 3$$$ и $$$b = 3$$$, тогда вы запишете $$$3$$$, и на доске останутся числа $$$[1, 3]$$$; </li><li> выбрать $$$a = 1$$$ и $$$b = 3$$$, тогда вы запишете $$$2$$$, и на доске останется $$$[2]$$$. </li></ol><p>Легко показать, что после $$$n - 1$$$ операции на доске будет записано всего одно число, его и нужно минимизировать.</p>"},"inSpecsHtml":{"en":"<div class=\"section-title\">Input</div><p>The first line contains one integer $$$t$$$ ($$$1 \\le t \\le 1000$$$)&nbsp;— the number of test cases.</p><p>The only line of each test case contains one integer $$$n$$$ ($$$2 \\le n \\le 2 \\cdot 10^5$$$)&nbsp;— the number of integers written on the board initially.</p><p>It's guaranteed that the total sum of $$$n$$$ over test cases doesn't exceed $$$2 \\cdot 10^5$$$.</p>","ru":"<div class=\"section-title\">Входные данные</div><p>В первой строке задано одно целое число $$$t$$$ ($$$1 \\le t \\le 1000$$$)&nbsp;— количество наборов входных данных.</p><p>В первой строке каждого набора задано целое число $$$n$$$ ($$$2 \\le n \\le 2 \\cdot 10^5$$$)&nbsp;— количество целых чисел, изначально записанных на доске.</p><p>Гарантируется, что сумма $$$n$$$ по всем наборам входных данных не превосходит $$$2 \\cdot 10^5$$$.</p>"},"outSpecsHtml":{"en":"<div class=\"section-title\">Output</div><p>For each test case, in the first line, print the minimum possible number left on the board after $$$n - 1$$$ operations. Each of the next $$$n - 1$$$ lines should contain two integers&nbsp;— numbers $$$a$$$ and $$$b$$$ chosen and erased in each operation.</p>","ru":"<div class=\"section-title\">Выходные данные</div><p>В первую строку каждого набора входных данных выведите минимальное число, которое может остаться на доске после $$$n - 1$$$ операции. В каждой из следующих $$$n - 1$$$ строк выведите по два целых числа&nbsp;— числа $$$a$$$ и $$$b$$$, которые должны быть стерты с доски во время очередной операции.</p>"},"noteHtml":{"en":null,"ru":null},"sampleTestcases":[{"id":1644953230901,"input":"1\n4\n","output":"2\n2 4\n3 3\n3 1\n"}],"submitUrl":"https://codeforces.com/contest/1430/submit","language":"python"}