{"title":"D1. RPD and Rap Sheet (Easy Version)","contestId":"1543","problemIndex":"D1","timeLimit":"5 seconds","memLimit":"256 megabytes","inputFormat":"standard input","outputFormat":"standard output","problemHtml":"<p><span class=\"tex-font-style-bf\">This is the easy version of the problem. The only difference is that here $$$k=2$$$. You can make hacks only if both the versions of the problem are solved.</span></p><p><span class=\"tex-font-style-it\">This is an interactive problem.</span></p><p>Every decimal number has a base $$$k$$$ equivalent. The individual digits of a base $$$k$$$ number are called $$$k$$$-its. Let&apos;s define the $$$k$$$-itwise XOR of two $$$k$$$-its $$$a$$$ and $$$b$$$ as $$$(a + b)\\bmod k$$$.</p><p>The $$$k$$$-itwise XOR of two base $$$k$$$ numbers is equal to the new number formed by taking the $$$k$$$-itwise XOR of their corresponding $$$k$$$-its. The $$$k$$$-itwise XOR of two decimal numbers $$$a$$$ and $$$b$$$ is denoted by $$$a\\oplus_{k} b$$$ and is equal to the decimal representation of the $$$k$$$-itwise XOR of the base $$$k$$$ representations of $$$a$$$ and $$$b$$$. All further numbers used in the statement below are in decimal unless specified. When $$$k = 2$$$ (it is always true in this version), the $$$k$$$-itwise XOR is the same as the <a href=\"https://en.wikipedia.org/wiki/Bitwise_operation#XOR\">bitwise XOR</a>.</p><p>You have hacked the criminal database of Rockport Police Department (RPD), also known as the Rap Sheet. But in order to access it, you require a password. You don&apos;t know it, but you are quite sure that it lies between $$$0$$$ and $$$n-1$$$ inclusive. So, you have decided to guess it. Luckily, you can try at most $$$n$$$ times without being blocked by the system. But the system is adaptive. Each time you make an incorrect guess, it changes the password. Specifically, if the password before the guess was $$$x$$$, and you guess a different number $$$y$$$, then the system changes the password to a number $$$z$$$ such that $$$x\\oplus_{k} z=y$$$. Guess the password and break into the system.</p>","inSpecsHtml":"<div class=\"section-title\">Input</div><p>The first line of input contains a single integer $$$t$$$ ($$$1\\leq t\\leq 10\\,000$$$) denoting the number of test cases. $$$t$$$ test cases follow.</p><p>The first line of each test case contains two integers $$$n$$$ ($$$1\\leq n\\leq 2\\cdot 10^5$$$) and $$$k$$$ ($$$k=2$$$).</p><p>It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2\\cdot 10^5$$$.</p>","outSpecsHtml":null,"noteHtml":"<div class=\"section-title\">Note</div><p>In the example test case, the hidden password is $$$2$$$.</p><p>The first query is $$$3$$$. It is not equal to the current password. So, $$$0$$$ is returned, and the password is changed to $$$1$$$ since $$$2\\oplus_2 1=3$$$.</p><p>The second query is $$$4$$$. It is not equal to the current password. So, $$$0$$$ is returned, and the password is changed to $$$5$$$ since $$$1\\oplus_2 5=4$$$.</p><p>The third query is $$$5$$$. It is equal to the current password. So, $$$1$$$ is returned, and the job is done.</p><p>Note that this initial password is taken just for the sake of explanation. When you submit, the interactor might behave differently because it is adaptive.</p>","sampleTestcases":[{"id":1625707616774,"input":"1\n5 2\n\n0\n\n0\n\n1\n","output":"3\n\n4\n\n5\n\n"}],"submitUrl":"https://codeforces.com/contest/1543/submit","language":"python"}