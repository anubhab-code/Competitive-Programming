{"title":"C2. k-LCM (hard version)","contestId":"1497","problemIndex":"C2","timeLimit":"1 second","memLimit":"256 megabytes","inputFormat":"standard input","outputFormat":"standard output","problemHtml":"<p><span class=\"tex-font-style-bf\">It is the hard version of the problem. The only difference is that in this version $$$3 \\le k \\le n$$$.</span></p><p>You are given a positive integer $$$n$$$. Find $$$k$$$ positive integers $$$a_1, a_2, \\ldots, a_k$$$, such that:</p><ul> <li> $$$a_1 + a_2 + \\ldots + a_k = n$$$ </li><li> $$$LCM(a_1, a_2, \\ldots, a_k) \\le \\frac{n}{2}$$$ </li></ul><p>Here $$$LCM$$$ is the <a href=\"https://en.wikipedia.org/wiki/Least_common_multiple\">least common multiple</a> of numbers $$$a_1, a_2, \\ldots, a_k$$$.</p><p>We can show that for given constraints the answer always exists.</p>","inSpecsHtml":"<div class=\"section-title\">Input</div><p>The first line contains a single integer $$$t$$$ $$$(1 \\le t \\le 10^4)$$$ &#xA0;&#x2014; the number of test cases.</p><p>The only line of each test case contains two integers $$$n$$$, $$$k$$$ ($$$3 \\le n \\le 10^9$$$, $$$3 \\le k \\le n$$$).</p><p>It is guaranteed that the sum of $$$k$$$ over all test cases does not exceed $$$10^5$$$.</p>","outSpecsHtml":"<div class=\"section-title\">Output</div><p>For each test case print $$$k$$$ positive integers $$$a_1, a_2, \\ldots, a_k$$$, for which all conditions are satisfied.</p>","noteHtml":null,"sampleTestcases":[{"id":1624133443352,"input":"2\n6 4\n9 5\n","output":"1 2 2 1 \n1 3 3 1 1 \n"}],"submitUrl":"https://codeforces.com/contest/1497/submit","language":"python"}