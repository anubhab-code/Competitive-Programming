{"title":{"en":"C. Balanced Stone Heaps","ru":"C. Сбалансированные кучки камней"},"contestId":"1623","problemIndex":"C","timeLimit":{"en":"1 second","ru":"1 секунда"},"memLimit":{"en":"256 megabytes","ru":"256 мегабайт"},"inputFormat":{"en":"standard input","ru":"стандартный ввод"},"outputFormat":{"en":"standard output","ru":"стандартный вывод"},"problemHtml":{"en":"<p>There are $$$n$$$ heaps of stone. The $$$i$$$-th heap has $$$h_i$$$ stones. You want to change the number of stones in the heap by performing the following process once: </p><ul> <li> You go through the heaps from the $$$3$$$-rd heap to the $$$n$$$-th heap, in this order. </li><li> Let $$$i$$$ be the number of the current heap. </li><li> You can choose a number $$$d$$$ ($$$0 \\le 3 \\cdot d \\le h_i$$$), move $$$d$$$ stones from the $$$i$$$-th heap to the $$$(i - 1)$$$-th heap, and $$$2 \\cdot d$$$ stones from the $$$i$$$-th heap to the $$$(i - 2)$$$-th heap. </li><li> So after that $$$h_i$$$ is decreased by $$$3 \\cdot d$$$, $$$h_{i - 1}$$$ is increased by $$$d$$$, and $$$h_{i - 2}$$$ is increased by $$$2 \\cdot d$$$. </li><li> You can choose different or same $$$d$$$ for different operations. Some heaps may become empty, but they still count as heaps. </li></ul><p>What is the maximum number of stones in the smallest heap after the process?</p>","ru":"<p>В ряд находятся $$$n$$$ кучек камней. В $$$i$$$-й кучке изначально $$$h_i$$$ камней. Вы хотите изменить число камней в кучках, выполнив следующий процесс один раз: </p><ul> <li> Вы идете по кучкам от $$$3$$$-й до $$$n$$$-й, в таком порядке. </li><li> Пусть $$$i$$$&nbsp;— номер текущей кучки. </li><li> Вы можете выбрать целое число $$$d$$$ ($$$0 \\le 3 \\cdot d \\le h_i$$$), переместить $$$d$$$ камней из $$$i$$$-й кучки в $$$(i - 1)$$$-ю кучку, и $$$2 \\cdot d$$$ камней из $$$i$$$-й кучки в $$$(i - 2)$$$-ю. </li><li> Таким образом, $$$h_i$$$ уменьшается на $$$3 \\cdot d$$$, $$$h_{i - 1}$$$ увеличивается на $$$d$$$, и $$$h_{i - 2}$$$ увеличивается на $$$2 \\cdot d$$$. </li><li> Вы можете выбирать различные или одинаковые $$$d$$$ для различных операций. Некоторые кучки могут стать пустыми, но они все еще считаются за кучки. </li></ul><p>Какое наибольшее число камней в наименьшей кучке может получиться после завершения процесса?</p>"},"inSpecsHtml":{"en":"<div class=\"section-title\">Input</div><p>Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 2\\cdot 10^5$$$). Description of the test cases follows.</p><p>The first line of each test case contains a single integer $$$n$$$ ($$$3 \\le n \\le 2 \\cdot 10^5$$$).</p><p>The second lines of each test case contains $$$n$$$ integers $$$h_1, h_2, h_3, \\ldots, h_n$$$ ($$$1 \\le h_i \\le 10^9$$$).</p><p>It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.</p>","ru":"<div class=\"section-title\">Входные данные</div><p>Во входных данных находятся несколько наборов входных данных. В первой строке находится одно целое число $$$t$$$ ($$$1 \\le t \\le 2\\cdot 10^5$$$)&nbsp;— количество наборов входных данных. Далее следуют наборы входных данных.</p><p>Первая строка каждого набора входных данных содержит целое число $$$n$$$ ($$$3 \\le n \\le 2 \\cdot 10^5$$$).</p><p>Вторая строка каждого набора содержит $$$n$$$ целых чисел $$$h_1, h_2, h_3, \\ldots, h_n$$$ ($$$1 \\le h_i \\le 10^9$$$).</p><p>Гарантируется, что сумма $$$n$$$ по всем наборам входных данных не превосходит $$$2 \\cdot 10^5$$$.</p>"},"outSpecsHtml":{"en":"<div class=\"section-title\">Output</div><p>For each test case, print the maximum number of stones that the smallest heap can contain.</p>","ru":"<div class=\"section-title\">Выходные данные</div><p>Для каждого набора входных данных выведите максимальное число камней, которое может содержать наименьшая по количеству камней кучка после завершения процесса.</p>"},"noteHtml":{"en":"<div class=\"section-title\">Note</div><p>In the first test case, the initial heap sizes are $$$[1, 2, 10, 100]$$$. We can move the stones as follows. </p><ul> <li> move $$$3$$$ stones and $$$6$$$ from the $$$3$$$-rd heap to the $$$2$$$-nd and $$$1$$$ heap respectively. The heap sizes will be $$$[7, 5, 1, 100]$$$; </li><li> move $$$6$$$ stones and $$$12$$$ stones from the last heap to the $$$3$$$-rd and $$$2$$$-nd heap respectively. The heap sizes will be $$$[7, 17, 7, 82]$$$. </li></ul><p>In the second test case, the last heap is $$$1$$$, and we can not increase its size.</p><p>In the third test case, it is better not to move any stones.</p><p>In the last test case, the final achievable configuration of the heaps can be $$$[3, 5, 3, 4, 3, 3]$$$.</p>","ru":"<div class=\"section-title\">Примечание</div><p>В первом примере изначально размеры кучек равны $$$[1, 2, 10, 100]$$$. Мы можем перемещать камни следующим образом. </p><ul> <li> переместить $$$3$$$ и $$$6$$$ камней с $$$3$$$-й кучки на $$$2$$$-ю и $$$1$$$-ю кучки соответственно. Размеры кучек будут равны $$$[7, 5, 1, 100]$$$; </li><li> Переместить $$$6$$$ и $$$12$$$ камней с последней кучки на $$$3$$$-ю и $$$2$$$-ю кучки соответственно. Размеры кучек будут равны $$$[7, 17, 7, 82]$$$. </li></ul><p>Во втором наборе размер последней кучки равен $$$1$$$ и мы не можем его увеличить.</p><p>В третьем наборе оптимально не перемещать никакие камни.</p><p>В четвертом примере можно достичь состояния, в котором размеры кучек равны $$$[3, 5, 3, 4, 3, 3]$$$.</p>"},"sampleTestcases":[{"id":1641363109429,"input":"4\n4\n1 2 10 100\n4\n100 100 100 1\n5\n5 1 1 1 8\n6\n1 2 3 4 5 6\n","output":"7\n1\n1\n3\n"}],"submitUrl":"https://codeforces.com/contest/1623/submit","language":"c++"}