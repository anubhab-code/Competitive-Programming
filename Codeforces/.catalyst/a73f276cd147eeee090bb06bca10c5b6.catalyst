{"title":"B. Phone Numbers","contestId":"151","problemIndex":"B","timeLimit":"2 seconds","memLimit":"256 megabytes","inputFormat":"standard input","outputFormat":"standard output","problemHtml":"<p>Winters are just damn freezing cold in Nvodsk! That&apos;s why a group of <span class=\"tex-span\"><i>n</i></span> friends prefers to take a taxi, order a pizza and call girls. The phone numbers in the city consist of three pairs of digits (for example, 12-34-56). Each friend has a phonebook of size <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>i</i></sub></span> (that&apos;s the number of phone numbers). We know that taxi numbers consist of six identical digits (for example, 22-22-22), the numbers of pizza deliveries should necessarily be decreasing sequences of six different digits (for example, 98-73-21), all other numbers are the girls&apos; numbers.</p><p>You are given your friends&apos; phone books. Calculate which friend is best to go to when you are interested in each of those things (who has maximal number of phone numbers of each type). </p><p>If the phone book of one person contains some number two times, you should count it <span class=\"tex-font-style-bf\">twice</span>. That is, each number should be taken into consideration the number of times it occurs in the phone book.</p>","inSpecsHtml":"<div class=\"section-title\">Input</div><p>The first line contains an integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1&#x2009;&#x2264;&#x2009;<i>n</i>&#x2009;&#x2264;&#x2009;100</span>) &#x2014; the number of friends. </p><p>Then follow <span class=\"tex-span\"><i>n</i></span> data blocks that describe each friend&apos;s phone books. Each block is presented in the following form: first goes the line that contains integer <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>i</i></sub></span> and string <span class=\"tex-span\"><i>name</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">0&#x2009;&#x2264;&#x2009;<i>s</i><sub class=\"lower-index\"><i>i</i></sub>&#x2009;&#x2264;&#x2009;100</span>) &#x2014; the number of phone numbers in the phone book of the <span class=\"tex-span\"><i>i</i></span>-th friend and the name of the <span class=\"tex-span\"><i>i</i></span>-th friend. The name is a non-empty sequence of uppercase and lowercase Latin letters, containing no more than <span class=\"tex-span\">20</span> characters. Next <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>i</i></sub></span> lines contain numbers as &quot;XX-XX-XX&quot;, where X is arbitrary digits from <span class=\"tex-span\">0</span> to <span class=\"tex-span\">9</span>.</p>","outSpecsHtml":"<div class=\"section-title\">Output</div><p>In the first line print the phrase &quot;<span class=\"tex-font-style-tt\">If you want to call a taxi, you should call: </span>&quot;. Then print names of all friends whose phone books contain maximal number of taxi phone numbers. </p><p>In the second line print the phrase &quot;<span class=\"tex-font-style-tt\">If you want to order a pizza, you should call: </span>&quot;. Then print names of all friends who have maximal number of pizza phone numbers. </p><p>In the third line print the phrase &quot;<span class=\"tex-font-style-tt\">If you want to go to a cafe with a wonderful girl, you should call: </span>&quot;. Then print names of all friends who have maximal number of girls&apos; phone numbers. </p><p>Print the names in the order in which <span class=\"tex-font-style-bf\">they are given in the input data</span>. Separate two consecutive names with a comma and a space. Each line should end with exactly one point. For clarifications concerning the output form, see sample tests. It is necessary that you <span class=\"tex-font-style-bf\">follow the output form strictly</span>. Extra spaces are not allowed.</p>","noteHtml":"<div class=\"section-title\">Note</div><p>In the first sample you are given four friends. <span class=\"tex-font-style-tt\">Fedorov</span>&apos;s phone book contains one taxi number and one pizza delivery number, <span class=\"tex-font-style-tt\">Melnikov</span>&apos;s phone book only has <span class=\"tex-span\">3</span> numbers of girls, <span class=\"tex-font-style-tt\">Rogulenko</span>&apos;s one has <span class=\"tex-span\">6</span> taxi numbers and one pizza delivery number, <span class=\"tex-font-style-tt\">Kaluzhin</span>&apos;s one contains <span class=\"tex-span\">2</span> taxi numbers and one pizza delivery number.</p><p>Thus, if you need to order a taxi, you should obviously call <span class=\"tex-font-style-tt\">Rogulenko</span>, if you need to order a pizza you should call anybody of the following: <span class=\"tex-font-style-tt\">Rogulenko</span>, <span class=\"tex-font-style-tt\">Fedorov</span>, <span class=\"tex-font-style-tt\">Kaluzhin</span> (each of them has one number). <span class=\"tex-font-style-tt\">Melnikov</span> has maximal number of phone numbers of girls. </p>","sampleTestcases":[{"id":1624678505561,"input":"4\n2 Fedorov\n22-22-22\n98-76-54\n3 Melnikov\n75-19-09\n23-45-67\n99-99-98\n7 Rogulenko\n22-22-22\n11-11-11\n33-33-33\n44-44-44\n55-55-55\n66-66-66\n95-43-21\n3 Kaluzhin\n11-11-11\n99-99-99\n98-65-32\n","output":"If you want to call a taxi, you should call: Rogulenko.\nIf you want to order a pizza, you should call: Fedorov, Rogulenko, Kaluzhin.\nIf you want to go to a cafe with a wonderful girl, you should call: Melnikov.\n"},{"id":1624678505562,"input":"3\n5 Gleb\n66-66-66\n55-55-55\n01-01-01\n65-43-21\n12-34-56\n3 Serega\n55-55-55\n87-65-43\n65-55-21\n5 Melnik\n12-42-12\n87-73-01\n36-04-12\n88-12-22\n82-11-43\n","output":"If you want to call a taxi, you should call: Gleb.\nIf you want to order a pizza, you should call: Gleb, Serega.\nIf you want to go to a cafe with a wonderful girl, you should call: Melnik.\n"},{"id":1624678505563,"input":"3\n3 Kulczynski\n22-22-22\n65-43-21\n98-12-00\n4 Pachocki\n11-11-11\n11-11-11\n11-11-11\n98-76-54\n0 Smietanka\n","output":"If you want to call a taxi, you should call: Pachocki.\nIf you want to order a pizza, you should call: Kulczynski, Pachocki.\nIf you want to go to a cafe with a wonderful girl, you should call: Kulczynski.\n"}],"submitUrl":"https://codeforces.com/problemset/submit","language":"python"}