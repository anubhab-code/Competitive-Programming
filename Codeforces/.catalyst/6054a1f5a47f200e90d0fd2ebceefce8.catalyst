{"title":{"en":"C. Divan and bitwise operations","ru":"C. Divan и битовые операции"},"contestId":"1614","problemIndex":"C","timeLimit":{"en":"1 second","ru":"1 секунда"},"memLimit":{"en":"256 megabytes","ru":"256 мегабайт"},"inputFormat":{"en":"standard input","ru":"стандартный ввод"},"outputFormat":{"en":"standard output","ru":"стандартный вывод"},"problemHtml":{"en":"<p>Once <span class=\"tex-font-style-it\">Divan</span> analyzed a sequence $$$a_1, a_2, \\ldots, a_n$$$ consisting of $$$n$$$ non-negative integers as follows. He considered each non-empty <span class=\"tex-font-style-it\">subsequence</span> of the sequence $$$a$$$, computed the <a href=\"https://en.wikipedia.org/wiki/Bitwise_operation#XOR\">bitwise XOR</a> of its elements and added up all the XORs, obtaining the <span class=\"tex-font-style-it\">coziness</span> of the sequence $$$a$$$.</p><p>A sequence $$$c$$$ is a <span class=\"tex-font-style-it\">subsequence</span> of a sequence $$$d$$$ if $$$c$$$ can be obtained from $$$d$$$ by deletion of several (possibly, zero or all) elements. For example, $$$[1, \\, 2, \\, 3, \\, 4]$$$, $$$[2, \\, 4]$$$, and $$$[2]$$$ are subsequences of $$$[1, \\, 2, \\, 3, \\, 4]$$$, but $$$[4, \\, 3]$$$ and $$$[0]$$$ are not.</p><p><span class=\"tex-font-style-it\">Divan</span> was very proud of his analysis, but now he lost the sequence $$$a$$$, and also the coziness value! However, <span class=\"tex-font-style-it\">Divan</span> remembers the value of <a href=\"https://en.wikipedia.org/wiki/Bitwise_operation#OR\">bitwise OR</a> on $$$m$$$ contiguous subsegments of the sequence $$$a$$$. It turns out that each element of the original sequence is contained in <span class=\"tex-font-style-bf\">at least one</span> of these $$$m$$$ segments.</p><p><span class=\"tex-font-style-it\">Divan</span> asks you to help find the coziness of the sequence $$$a$$$ using the information he remembers. If several coziness values are possible, print any.</p><p>As the result can be very large, print the value modulo $$$10^9 + 7$$$.</p>","ru":"<p>Однажды <span class=\"tex-font-style-it\">Divan</span> проанализировал последовательность $$$a_1, a_2, \\ldots, a_n$$$, состоящую из $$$n$$$ целых неотрицательных чисел, следующим образом. Он рассмотрел все непустые <span class=\"tex-font-style-it\">подпоследовательности</span> последовательности $$$a$$$, вычислил <a href=\"https://ru.wikipedia.org/wiki/Битовая_операция#Побитовое_исключающее_ИЛИ\">побитовое исключающее ИЛИ</a> её элементов, после чего просуммировал все полученные результаты, получив <span class=\"tex-font-style-it\">удобство</span> последовательности $$$a$$$.</p><p>Напомним, что последовательность $$$c$$$ является <span class=\"tex-font-style-it\">подпоследовательностью</span> последовательности $$$d$$$, если $$$c$$$ может быть получена из $$$d$$$ путем удаления нескольких элементов (возможно, ни одного). Например, $$$[1, \\, 2, \\, 3, \\, 4]$$$, $$$[2, \\, 4]$$$ и $$$[2]$$$ являются подпоследовательностями $$$[1, \\, 2, \\, 3, \\, 4]$$$, а $$$[4, \\, 3]$$$ и $$$[0]$$$ не являются.</p><p><span class=\"tex-font-style-it\">Divan</span> очень гордился проведенным анализом, но теперь потерял и последовательность $$$a$$$, и значение ее удобства! Однако <span class=\"tex-font-style-it\">Divan</span> помнит значение <a href=\"https://ru.wikipedia.org/wiki/Битовая_операция#Побитовое_ИЛИ\">побитового ИЛИ</a> на $$$m$$$ непрерывных подотрезках последовательности $$$a$$$. Оказалось, что каждый элемент последовательности входит хотя бы в один из этих $$$m$$$ отрезков.</p><p><span class=\"tex-font-style-it\">Divan</span> просит вас найти удобство последовательности $$$a$$$, используя информацию, которую он помнит. Если возможны несколько значений удобства, выведите любое.</p><p>Так как ответ может быть большим, выведите его по модулю $$$10^9 + 7$$$.</p>"},"inSpecsHtml":{"en":"<div class=\"section-title\">Input</div><p>The first line contains one integer number $$$t$$$ ($$$1 \\le t \\le 10^3$$$) — the number of test cases.</p><p>The first line of each test case contains two integer numbers $$$n$$$ and $$$m$$$ ($$$1 \\le n, m \\le 2 \\cdot 10^5$$$) — the length of the sequence and the number of contiguous segments whose bitwise OR values <span class=\"tex-font-style-it\">Divan</span> remembers, respectively.</p><p>The following $$$m$$$ lines describe the segments, one per line.</p><p>Each segment is described with three integers $$$l$$$, $$$r$$$, and $$$x$$$ ($$$1 \\le l \\le r \\le n$$$, $$$0 \\le x \\le 2^{30} - 1$$$) — the first and last elements of the segment and the bitwise OR of $$$a_l, a_{l + 1}, \\ldots, a_r$$$, respectively.</p><p>It is guaranteed that each element of the sequence is contained in at least one of the segments. It is guaranteed that there exists a sequence that satisfies all constraints.</p><p>It is guaranteed that the sum of $$$n$$$ and the sum of $$$m$$$ over all test cases do not exceed $$$2 \\cdot 10^5$$$. </p>","ru":"<div class=\"section-title\">Входные данные</div><p>Каждый тест содержит несколько наборов входных данных.</p><p>Первая строка содержит одно целое число $$$t$$$ ($$$1 \\le t \\le 10^3$$$) — количество наборов входных данных.</p><p>Первая строка каждого набора входных данных содержит два целых числа $$$n$$$ и $$$m$$$ ($$$1 \\le n, m \\le 2 \\cdot 10^5$$$) — количество чисел в последовательности и количество отрезков, значения побитового ИЛИ которых смог запомнить <span class=\"tex-font-style-it\">Divan</span>, соответственно.</p><p>Далее идут $$$m$$$ строк, в которых содержатся описания отрезков по одному в строке.</p><p>Каждый отрезок задаётся тремя целыми числами $$$l$$$, $$$r$$$ и $$$x$$$ ($$$1 \\le l \\le r \\le n$$$, $$$0 \\le x \\le 2^{30} - 1$$$) — левая и правая граница отрезка, а также значение побитового ИЛИ элементов $$$a_l, a_{l + 1}, \\ldots, a_r$$$, соответственно.</p><p>Гарантируется, что каждый элемент последовательности входит хотя бы в один из данных отрезков. Гарантируется, что существует последовательность, которая удовлетворяет всем данным ограничениям.</p><p>Гарантируется, что сумма значений $$$n$$$, а также сумма значений $$$m$$$ по всем наборам входных данных не превосходят $$$2 \\cdot 10^5$$$.</p>"},"outSpecsHtml":{"en":"<div class=\"section-title\">Output</div><p>For each test case print the coziness any suitable sequence $$$a$$$ modulo $$$10^9 + 7$$$.</p>","ru":"<div class=\"section-title\">Выходные данные</div><p>Для каждого набора входных данных выведите любое возможное удобство последовательности $$$a$$$ по модулю $$$10^9 + 7$$$.</p>"},"noteHtml":{"en":"<div class=\"section-title\">Note</div><p>In first example, one of the sequences that fits the constraints is $$$[0, 2]$$$. Consider all its non-empty subsequences:</p><ul> <li> $$$[0]$$$: the bitwise XOR of this subsequence is $$$0$$$; </li><li> $$$[2]$$$: the bitwise XOR of this subsequence is $$$2$$$; </li><li> $$$[0, 2]$$$: the bitwise XOR of this subsequence is $$$2$$$. </li></ul><p>The sum of all results is $$$4$$$, so it is the answer.</p><p>In second example, one of the sequences that fits the constraints is $$$[0, \\, 5, \\, 5]$$$.</p><p>In third example, one of the sequences that fits the constraints is $$$[5, \\, 6, \\, 7, \\, 0, \\, 2]$$$.</p>","ru":"<div class=\"section-title\">Примечание</div><p>В первом примере одной из последовательностей, которая подходит под ограничения, является $$$[0, 2]$$$. Рассмотрим все её непустые подпоследовательности: </p><ul> <li> $$$[0]$$$: побитовое исключающее ИЛИ равно $$$0$$$; </li><li> $$$[2]$$$: побитовое исключающее ИЛИ равно $$$2$$$; </li><li> $$$[0, 2]$$$: побитовое исключающее ИЛИ равно $$$2$$$. </li></ul><p>Суммируя полученные числа, получаем $$$4$$$, что является ответом.</p><p>Во втором примере одной из последовательностей, которая подходит под ограничения, является $$$[0, \\, 5, \\, 5]$$$.</p><p>В третьем примере одной из последовательностей, которая подходит под ограничения, является $$$[5, \\, 6, \\, 7, \\, 0, \\, 2]$$$.</p>"},"sampleTestcases":[{"id":1638629850633,"input":"3\n2 1\n1 2 2\n3 2\n1 3 5\n2 3 5\n5 4\n1 2 7\n3 3 7\n4 4 0\n4 5 2\n","output":"4\n20\n112\n","result":{"id":1638629850633,"stdout":"","stderr":"Python was not found; run without arguments to install from the Microsoft Store, or disable this shortcut from Settings > Manage App Execution Aliases.\r\n","exitcode":9009,"signal":null,"time":153,"timeout":false}}],"submitUrl":"https://codeforces.com/contest/1614/submit","language":"python","langId":"41"}