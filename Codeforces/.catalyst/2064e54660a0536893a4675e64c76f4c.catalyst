{"title":"A. Adding Digits","contestId":"260","problemIndex":"A","timeLimit":"2 seconds","memLimit":"256 megabytes","inputFormat":"standard input","outputFormat":"standard output","problemHtml":"<p>Vasya has got two number: <span class=\"tex-span\"><i>a</i></span> and <span class=\"tex-span\"><i>b</i></span>. However, Vasya finds number <span class=\"tex-span\"><i>a</i></span> too short. So he decided to repeat the operation of lengthening number <span class=\"tex-span\"><i>a</i></span> <span class=\"tex-span\"><i>n</i></span> times.</p><p>One operation of lengthening a number means adding exactly one digit to the number (in the decimal notation) to the right provided that the resulting number is divisible by Vasya&apos;s number <span class=\"tex-span\"><i>b</i></span>. If it is impossible to obtain the number which is divisible by <span class=\"tex-span\"><i>b</i></span>, then the lengthening operation cannot be performed.</p><p>Your task is to help Vasya and print the number he can get after applying the lengthening operation to number <span class=\"tex-span\"><i>a</i> <i>n</i></span> times.</p>","inSpecsHtml":"<div class=\"section-title\">Input</div><p>The first line contains three integers: <span class=\"tex-span\"><i>a</i>,&#x2009;<i>b</i>,&#x2009;<i>n</i> (1&#x2009;&#x2264;&#x2009;<i>a</i>,&#x2009;<i>b</i>,&#x2009;<i>n</i>&#x2009;&#x2264;&#x2009;10<sup class=\"upper-index\">5</sup>)</span>.</p>","outSpecsHtml":"<div class=\"section-title\">Output</div><p>In a single line print the integer without leading zeros, which Vasya can get when he applies the lengthening operations to number <span class=\"tex-span\"><i>a</i> <i>n</i></span> times. If no such number exists, then print number -1. If there are multiple possible answers, print any of them.</p>","noteHtml":null,"sampleTestcases":[{"id":1626307726811,"input":"5 4 5\n","output":"524848\n"},{"id":1626307726812,"input":"12 11 1\n","output":"121\n"},{"id":1626307726813,"input":"260 150 10\n","output":"-1\n"}],"submitUrl":"https://codeforces.com/problemset/submit","language":"python"}