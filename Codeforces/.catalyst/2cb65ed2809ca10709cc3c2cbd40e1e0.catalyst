{"title":{"en":"B. Balanced Remainders","ru":"B. Сбалансированные остатки"},"contestId":"1490","problemIndex":"B","timeLimit":{"en":"2 seconds","ru":"2 секунды"},"memLimit":{"en":"256 megabytes","ru":"256 мегабайт"},"inputFormat":{"en":"standard input","ru":"стандартный ввод"},"outputFormat":{"en":"standard output","ru":"стандартный вывод"},"problemHtml":{"en":"<p>You are given a number $$$n$$$ (<span class=\"tex-font-style-bf\">divisible by $$$3$$$</span>) and an array $$$a[1 \\dots n]$$$. In one move, you can increase any of the array elements by one. Formally, you choose the index $$$i$$$ ($$$1 \\le i \\le n$$$) and <span class=\"tex-font-style-bf\">replace</span> $$$a_i$$$ with $$$a_i + 1$$$. You can choose the same index $$$i$$$ multiple times for different moves.</p><p>Let's denote by $$$c_0$$$, $$$c_1$$$ and $$$c_2$$$ the number of numbers from the array $$$a$$$ that have remainders $$$0$$$, $$$1$$$ and $$$2$$$ when divided by the number $$$3$$$, respectively. Let's say that the array $$$a$$$ has balanced remainders if $$$c_0$$$, $$$c_1$$$ and $$$c_2$$$ are equal.</p><p>For example, if $$$n = 6$$$ and $$$a = [0, 2, 5, 5, 4, 8]$$$, then the following sequence of moves is possible: </p><ul> <li> initially $$$c_0 = 1$$$, $$$c_1 = 1$$$ and $$$c_2 = 4$$$, these values are not equal to each other. Let's increase $$$a_3$$$, now the array $$$a = [0, 2, 6, 5, 4, 8]$$$; </li><li> $$$c_0 = 2$$$, $$$c_1 = 1$$$ and $$$c_2 = 3$$$, these values are not equal. Let's increase $$$a_6$$$, now the array $$$a = [0, 2, 6, 5, 4, 9]$$$; </li><li> $$$c_0 = 3$$$, $$$c_1 = 1$$$ and $$$c_2 = 2$$$, these values are not equal. Let's increase $$$a_1$$$, now the array $$$a = [1, 2, 6, 5, 4, 9]$$$; </li><li> $$$c_0 = 2$$$, $$$c_1 = 2$$$ and $$$c_2 = 2$$$, these values are equal to each other, which means that the array $$$a$$$ has balanced remainders. </li></ul><p>Find the minimum number of moves needed to make the array $$$a$$$ have balanced remainders.</p>","ru":"<p>Вам дано число $$$n$$$ (<span class=\"tex-font-style-bf\">делящееся на $$$3$$$</span>) и массив $$$a[1 \\dots n]$$$. За один ход вы можете увеличить любой из элементов массива на единицу. Формально, вы выбираете индекс $$$i$$$ ($$$1 \\le i \\le n$$$) и <span class=\"tex-font-style-bf\">заменяете</span> $$$a_i$$$ на $$$a_i + 1$$$. Вы можете выбирать один и тот же индекс $$$i$$$ неоднократно для разных ходов.</p><p>Обозначим за $$$c_0$$$, $$$c_1$$$ и $$$c_2$$$ количества чисел из массива $$$a$$$ которые имеют остаток $$$0$$$, $$$1$$$ и $$$2$$$ при делении на число $$$3$$$ соответственно. Скажем, что массив $$$a$$$ имеет сбалансированные остатки, если $$$c_0$$$, $$$c_1$$$ и $$$c_2$$$ равны между собой.</p><p>Например, если $$$n = 6$$$ и $$$a = [0, 2, 5, 5, 4, 8]$$$, то возможна следующая последовательность ходов: </p><ul> <li> изначально $$$c_0 = 1$$$, $$$c_1 = 1$$$ и $$$c_2 = 4$$$, эти величины не равны между собой. Увеличим $$$a_3$$$, теперь массив $$$a = [0, 2, 6, 5, 4, 8]$$$; </li><li> $$$c_0 = 2$$$, $$$c_1 = 1$$$ и $$$c_2 = 3$$$, эти величины не равны между собой. Увеличим $$$a_6$$$, теперь массив $$$a = [0, 2, 6, 5, 4, 9]$$$; </li><li> $$$c_0 = 3$$$, $$$c_1 = 1$$$ и $$$c_2 = 2$$$, эти величины не равны между собой. Увеличим $$$a_1$$$, теперь массив $$$a = [1, 2, 6, 5, 4, 9]$$$; </li><li> $$$c_0 = 2$$$, $$$c_1 = 2$$$ и $$$c_2 = 2$$$, эти величины равны между собой, значит, массив $$$a$$$ имеет сбалансированные остатки. </li></ul><p>Найдите, какое минимальное количество ходов необходимо сделать, чтобы массив $$$a$$$ имел сбалансированные остатки.</p>"},"inSpecsHtml":{"en":"<div class=\"section-title\">Input</div><p>The first line contains one integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$). Then $$$t$$$ test cases follow.</p><p>The first line of each test case contains one integer $$$n$$$ ($$$3 \\le n \\le 3 \\cdot 10^4$$$)&nbsp;— the length of the array $$$a$$$. It is guaranteed that the number $$$n$$$ is divisible by $$$3$$$.</p><p>The next line contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$0 \\leq a_i \\leq 100$$$).</p><p>It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$150\\,000$$$.</p>","ru":"<div class=\"section-title\">Входные данные</div><p>В первой строке содержится одно целое число $$$t$$$ ($$$1 \\le t \\le 10^4$$$). Далее следуют $$$t$$$ наборов входных данных.</p><p>В первой строке каждого набора входных данных находится одно целое число $$$n$$$ ($$$3 \\le n \\le 3 \\cdot 10^4$$$)&nbsp;— длина массива $$$a$$$. Гарантируется, что число $$$n$$$ делится на $$$3$$$.</p><p>Следующая строка содержит $$$n$$$ целых чисел $$$a_1, a_2, \\ldots, a_n$$$ ($$$0 \\leq a_i \\leq 100$$$).</p><p>Гарантируется, что сумма $$$n$$$ по всем наборам входных данных не превосходит $$$150\\,000$$$.</p>"},"outSpecsHtml":{"en":"<div class=\"section-title\">Output</div><p>For each test case, output one integer&nbsp;— the minimum number of moves that must be made for the $$$a$$$ array to make it have balanced remainders.</p>","ru":"<div class=\"section-title\">Выходные данные</div><p>Для каждого набора входных данных выведите одно целое число&nbsp;— минимальное количество ходов, которые надо совершить, чтобы массив $$$a$$$ имел сбалансированные остатки.</p>"},"noteHtml":{"en":"<div class=\"section-title\">Note</div><p>The first test case is explained in the statements.</p><p>In the second test case, you need to make one move for $$$i=2$$$.</p><p>The third test case you need to make three moves: </p><ul> <li> the first move: $$$i=9$$$; </li><li> the second move: $$$i=9$$$; </li><li> the third move: $$$i=2$$$. </li></ul><p>In the fourth test case, the values $$$c_0$$$, $$$c_1$$$ and $$$c_2$$$ initially equal to each other, so the array $$$a$$$ already has balanced remainders.</p>","ru":"<div class=\"section-title\">Примечание</div><p>Первый набор входных данных разобран в условии.</p><p>Во втором наборе входных данных необходимо сделать один ход для $$$i=2$$$.</p><p>В третьем наборе входных данных необходимо сделать три хода: </p><ul> <li> первый ход: $$$i=9$$$; </li><li> второй ход: $$$i=9$$$; </li><li> третий ход: $$$i=2$$$. </li></ul><p>В четвертом наборе входных данных величины $$$c_0$$$, $$$c_1$$$ и $$$c_2$$$ изначально совпадают, поэтому массив $$$a$$$ уже имеет сбалансированные остатки.</p>"},"sampleTestcases":[{"id":1654774010059,"input":"4\n6\n0 2 5 5 4 8\n6\n2 0 2 1 0 0\n9\n7 1 3 4 2 10 3 9 6\n6\n0 1 2 3 4 5\n","output":"3\n1\n3\n0\n"}],"submitUrl":"https://codeforces.com/contest/1490/submit","language":"python"}