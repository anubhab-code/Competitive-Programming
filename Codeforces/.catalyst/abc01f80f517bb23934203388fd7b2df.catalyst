{"title":{"en":"B. Omkar and Heavenly Tree","ru":"B. Омкар и божественное дерево"},"contestId":"1586","problemIndex":"B","timeLimit":{"en":"2 seconds","ru":"2 секунды"},"memLimit":{"en":"256 megabytes","ru":"256 мегабайт"},"inputFormat":{"en":"standard input","ru":"стандартный ввод"},"outputFormat":{"en":"standard output","ru":"стандартный вывод"},"problemHtml":{"en":"<p>Lord Omkar would like to have a tree with $$$n$$$ nodes ($$$3 \\le n \\le 10^5$$$) and has asked his disciples to construct the tree. However, Lord Omkar has created $$$m$$$ ($$$\\mathbf{1 \\le m &lt; n}$$$) restrictions to ensure that the tree will be as heavenly as possible. </p><p>A tree with $$$n$$$ nodes is an connected undirected graph with $$$n$$$ nodes and $$$n-1$$$ edges. Note that for any two nodes, there is exactly one simple path between them, where a simple path is a path between two nodes that does not contain any node more than once.</p><p>Here is an example of a tree: </p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/0c2c664b43f98f7f388ef52d12fba06d30758778.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"> </center><p>A restriction consists of $$$3$$$ pairwise distinct integers, $$$a$$$, $$$b$$$, and $$$c$$$ ($$$1 \\le a,b,c \\le n$$$). It signifies that node $$$b$$$ cannot lie on the simple path between node $$$a$$$ and node $$$c$$$. </p><p>Can you help Lord Omkar and become his most trusted disciple? You will need to find heavenly trees for multiple sets of restrictions. It can be shown that a heavenly tree will always exist for any set of restrictions under the given constraints.</p>","ru":"<p>Лорд Омкар хотел бы, чтобы у него было дерево с $$$n$$$ вершинами ($$$3 \\le n \\le 10^5$$$), и попросил своих учеников построить дерево. Однако Лорд Омкар создал $$$m$$$ ($$$\\mathbf{1 \\le m &lt; n}$$$) ограничений, чтобы гарантировать, что дерево будет настолько божественным, насколько это возможно. </p><p>Дерево на $$$n$$$ вершинах — это связный неориентированный граф с $$$n$$$ вершинами и $$$n-1$$$ ребром. Заметим, что для любых двух вершин существует ровно один простой путь между ними, где простой путь — это путь между двумя вершинами, который не содержит ни одной вершины более одного раза.</p><p>Вот пример дерева: </p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/0c2c664b43f98f7f388ef52d12fba06d30758778.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"> </center><p>Ограничение состоит из $$$3$$$ попарно различных целых чисел, $$$a$$$, $$$b$$$ и $$$c$$$ ($$$1 \\le a,b,c \\le n$$$). Оно означает, что вершина $$$b$$$ не может лежать на простом пути между вершинами $$$a$$$ и $$$c$$$. </p><p>Сможете ли вы помочь Лорду Омкару и стать его самым доверенным учеником? Вам нужно будет найти божественные деревья для нескольких наборов ограничений. Можно показать, что при ограничениях задачи божественное дерево всегда найдется.</p>"},"inSpecsHtml":{"en":"<div class=\"section-title\">Input</div><p>Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\leq t \\leq 10^4$$$). Description of the test cases follows.</p><p>The first line of each test case contains two integers, $$$n$$$ and $$$m$$$ ($$$3 \\leq n \\leq 10^5$$$, $$$\\mathbf{1 \\leq m &lt; n}$$$), representing the size of the tree and the number of restrictions.</p><p>The $$$i$$$-th of the next $$$m$$$ lines contains three integers $$$a_i$$$, $$$b_i$$$, $$$c_i$$$ ($$$1 \\le a_i, b_i, c_i \\le n$$$, <span class=\"tex-font-style-bf\">$$$a$$$, $$$b$$$, $$$c$$$ are distinct</span>), signifying that node $$$b_i$$$ cannot lie on the simple path between nodes $$$a_i$$$ and $$$c_i$$$. </p><p>It is guaranteed that the sum of $$$n$$$ across all test cases will not exceed $$$10^5$$$.</p>","ru":"<div class=\"section-title\">Входные данные</div><p>Каждый тест содержит несколько наборов входных данных. Первая строка содержит количество наборов входных данных $$$t$$$ ($$$1 \\leq t \\leq 10^4$$$). Далее следует описание наборов входных данных.</p><p>Первая строка каждого набора входных данных содержит два целых числа $$$n$$$ и $$$m$$$ ($$$3 \\leq n \\leq 10^5$$$, $$$\\mathbf{1 \\leq m &lt; n}$$$), представляющих размер дерева и количество ограничений.</p><p>$$$i$$$-я из следующих $$$m$$$ строк содержит три целых числа $$$a_i$$$, $$$b_i$$$, $$$c_i$$$ ($$$1 \\le a_i, b_i, c_i \\le n$$$, <span class=\"tex-font-style-bf\">$$$a$$$, $$$b$$$, $$$c$$$ попарно различны</span>), обозначающие, что вершина $$$b_i$$$ не может лежать на простом пути между вершинами $$$a_i$$$ и $$$c_i$$$. </p><p>Гарантируется, что сумма $$$n$$$ по всем наборам входных данных не превышает $$$10^5$$$</p>"},"outSpecsHtml":{"en":"<div class=\"section-title\">Output</div><p>For each test case, output $$$n-1$$$ lines representing the $$$n-1$$$ edges in the tree. On each line, output two integers $$$u$$$ and $$$v$$$ ($$$1 \\le u, v \\le n$$$, $$$u \\neq v$$$) signifying that there is an edge between nodes $$$u$$$ and $$$v$$$. Given edges have to form a tree that satisfies Omkar's restrictions.</p>","ru":"<div class=\"section-title\">Выходные данные</div><p>Для каждого набора входных данных выведите $$$n-1$$$ строку, обозначающих $$$n-1$$$ ребро в дереве. В каждой строке выведите два целых числа $$$u$$$ и $$$v$$$ ($$$1 \\le u, v \\le n$$$, $$$u \\neq v$$$), обозначающие, что между вершинами $$$u$$$ и $$$v$$$ есть ребро. Данные ребра должны образовывать дерево, удовлетворяющее ограничениям Омкара.</p>"},"noteHtml":{"en":"<div class=\"section-title\">Note</div><p>The output of the first sample case corresponds to the following tree: </p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/5026d10ec0a05362ee58628c4fadde31d96fbbaf.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"> </center> For the first restriction, the simple path between $$$1$$$ and $$$3$$$ is $$$1, 3$$$, which doesn't contain $$$2$$$. The simple path between $$$3$$$ and $$$5$$$ is $$$3, 5$$$, which doesn't contain $$$4$$$. The simple path between $$$5$$$ and $$$7$$$ is $$$5, 3, 1, 2, 7$$$, which doesn't contain $$$6$$$. The simple path between $$$6$$$ and $$$4$$$ is $$$6, 7, 2, 1, 3, 4$$$, which doesn't contain $$$5$$$. Thus, this tree meets all of the restrictions.<p>The output of the second sample case corresponds to the following tree: </p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/91bb7614d530ff4a97985fdbc5086f2e60568451.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"> </center>","ru":"<div class=\"section-title\">Примечание</div><p>Вывод первого набора входных данных соответствует следующему дереву: </p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/5026d10ec0a05362ee58628c4fadde31d96fbbaf.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"> </center> Для первого ограничения, простой путь между $$$1$$$ и $$$3$$$ — это $$$1, 3$$$, и не содержит $$$2$$$. Простой путь между $$$3$$$ и $$$5$$$ — это $$$3, 5$$$, который не содержит $$$4$$$. Простой путь между $$$5$$$ и $$$7$$$ — $$$5, 3, 1, 2, 7$$$, который не содержит $$$6$$$. Простой путь между $$$6$$$ и $$$4$$$ — $$$6, 7, 2, 1, 3, 4$$$, который не содержит $$$5$$$. Таким образом, это дерево удовлетворяет всем ограничениям.<p>Вывод второго примера соответствует следующему дереву: </p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/91bb7614d530ff4a97985fdbc5086f2e60568451.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"> </center>"},"sampleTestcases":[{"id":1640267858613,"input":"2\n7 4\n1 2 3\n3 4 5\n5 6 7\n6 5 4\n5 3\n1 2 3\n2 3 4\n3 4 5\n","output":"1 2\n1 3\n3 5\n3 4\n2 7\n7 6\n5 1\n1 3\n3 2\n2 4\n"}],"submitUrl":"https://codeforces.com/contest/1586/submit","language":"python"}