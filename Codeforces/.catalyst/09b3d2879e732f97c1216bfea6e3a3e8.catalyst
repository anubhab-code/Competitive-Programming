{"title":{"en":"A. Shuffle Hashing","ru":"A. Хеширование перемешиванием"},"contestId":"1278","problemIndex":"A","timeLimit":{"en":"2 seconds","ru":"2 секунды"},"memLimit":{"en":"256 megabytes","ru":"256 мегабайт"},"inputFormat":{"en":"standard input","ru":"стандартный ввод"},"outputFormat":{"en":"standard output","ru":"стандартный вывод"},"problemHtml":{"en":"<p>Polycarp has built his own web service. Being a modern web service it includes login feature. And that always implies password security problems.</p><p>Polycarp decided to store the hash of the password, generated by the following algorithm:</p><ol> <li> take the password $$$p$$$, consisting of lowercase Latin letters, and shuffle the letters randomly in it to obtain $$$p'$$$ ($$$p'$$$ can still be equal to $$$p$$$); </li><li> generate two random strings, consisting of lowercase Latin letters, $$$s_1$$$ and $$$s_2$$$ (any of these strings can be empty); </li><li> the resulting hash $$$h = s_1 + p' + s_2$$$, where addition is string concatenation. </li></ol><p>For example, let the password $$$p =$$$ \"<span class=\"tex-font-style-tt\">abacaba</span>\". Then $$$p'$$$ can be equal to \"<span class=\"tex-font-style-tt\">aabcaab</span>\". Random strings $$$s1 =$$$ \"<span class=\"tex-font-style-tt\">zyx</span>\" and $$$s2 =$$$ \"<span class=\"tex-font-style-tt\">kjh</span>\". Then $$$h =$$$ \"<span class=\"tex-font-style-tt\">zyxaabcaabkjh</span>\".</p><p>Note that no letters could be deleted or added to $$$p$$$ to obtain $$$p'$$$, only the order could be changed.</p><p>Now Polycarp asks you to help him to implement the password check module. Given the password $$$p$$$ and the hash $$$h$$$, check that $$$h$$$ can be the hash for the password $$$p$$$.</p><p>Your program should answer $$$t$$$ independent test cases.</p>","ru":"<p>Поликарп недавно создал новый веб сервис. Как в любом современном сервисе, в нем есть возможность авторизации. А это автоматически подразумевает угрозы безопасности.</p><p>Поликарп решил сохранять хеш пароля, полученный по следующему алгоритму:</p><ol> <li> получить пароль $$$p$$$, состоящий из строчных латинских букв, и перемешать буквы в нем, чтобы получить $$$p'$$$ ($$$p'$$$ может остаться равным $$$p$$$); </li><li> построить две случайные строки, состоящие из строчных латинских букв, $$$s_1$$$ и $$$s_2$$$ (любая из них может быть пустой); </li><li> полученный хеш $$$h = s_1 + p' + s_2$$$, где сложение — это склеивание строк. </li></ol><p>Например, пусть пароль будет $$$p =$$$ «<span class=\"tex-font-style-tt\">abacaba</span>». Тогда $$$p'$$$ может быть равно «<span class=\"tex-font-style-tt\">aabcaab</span>». Случайные строки $$$s1 =$$$ «<span class=\"tex-font-style-tt\">zyx</span>» и $$$s2 =$$$ «<span class=\"tex-font-style-tt\">kjh</span>». Тогда $$$h =$$$ «<span class=\"tex-font-style-tt\">zyxaabcaabkjh</span>».</p><p>Обратите внимание, что нельзя удалять или добавлять буквы в $$$p$$$, чтобы получить $$$p'$$$, можно только менять их порядок.</p><p>Теперь Поликарп просит вас помочь ему в реализации модуля проверки пароля. По данному паролю $$$p$$$ и хешу $$$h$$$, проверьте, что $$$h$$$ может являться хешом пароля $$$p$$$.</p><p>Вам нужно ответить на $$$t$$$ наборов входных данных.</p>"},"inSpecsHtml":{"en":"<div class=\"section-title\">Input</div><p>The first line contains one integer $$$t$$$ ($$$1 \\le t \\le 100$$$) — the number of test cases.</p><p>The first line of each test case contains a non-empty string $$$p$$$, consisting of lowercase Latin letters. The length of $$$p$$$ does not exceed $$$100$$$.</p><p>The second line of each test case contains a non-empty string $$$h$$$, consisting of lowercase Latin letters. The length of $$$h$$$ does not exceed $$$100$$$.</p>","ru":"<div class=\"section-title\">Входные данные</div><p>В первой строке записано одно целое число $$$t$$$ ($$$1 \\le t \\le 100$$$) — количество наборов входных данных.</p><p>В первой строке каждого набора входных данных содержится непустая строка $$$p$$$, состоящая из строчных латинских букв. Длина $$$p$$$ не превышает $$$100$$$.</p><p>В второй строке каждого набора входных данных содержится непустая строка $$$h$$$, состоящая из строчных латинских букв. Длина $$$h$$$ не превышает $$$100$$$.</p>"},"outSpecsHtml":{"en":"<div class=\"section-title\">Output</div><p>For each test case print the answer to it — \"<span class=\"tex-font-style-tt\">YES</span>\" if the given hash $$$h$$$ could be obtained from the given password $$$p$$$ or \"<span class=\"tex-font-style-tt\">NO</span>\" otherwise.</p>","ru":"<div class=\"section-title\">Выходные данные</div><p>На каждый набор входных данных выведите «<span class=\"tex-font-style-tt\">YES</span>», если данный хеш $$$h$$$ может быть получен по данному паролю $$$p$$$, и «<span class=\"tex-font-style-tt\">NO</span>» в противном случае.</p>"},"noteHtml":{"en":"<div class=\"section-title\">Note</div><p>The first test case is explained in the statement.</p><p>In the second test case both $$$s_1$$$ and $$$s_2$$$ are empty and $$$p'=$$$ \"<span class=\"tex-font-style-tt\">threetwoone</span>\" is $$$p$$$ shuffled.</p><p>In the third test case the hash could not be obtained from the password.</p><p>In the fourth test case $$$s_1=$$$ \"<span class=\"tex-font-style-tt\">n</span>\", $$$s_2$$$ is empty and $$$p'=$$$ \"<span class=\"tex-font-style-tt\">one</span>\" is $$$p$$$ shuffled (even thought it stayed the same). </p><p>In the fifth test case the hash could not be obtained from the password.</p>","ru":"<div class=\"section-title\">Примечание</div><p>Первый набор входных данных объяснен в условии.</p><p>Во втором наборе входных данных и $$$s_1$$$, и $$$s_2$$$ пусты, а $$$p'=$$$ «<span class=\"tex-font-style-tt\">threetwoone</span>» — это перемешанная $$$p$$$.</p><p>В третьем наборе входных данных хеш нельзя получить из пароля.</p><p>В четвертом наборе входных данных $$$s_1=$$$ «<span class=\"tex-font-style-tt\">n</span>», $$$s_2$$$ пуста, а $$$p'=$$$ «<span class=\"tex-font-style-tt\">one</span>» — это перемешанная $$$p$$$ (даже несмотря на то, что они совпадают).</p><p>В пятом наборе входных данных хеш нельзя получить из пароля.</p>"},"sampleTestcases":[{"id":1644952841918,"input":"5\nabacaba\nzyxaabcaabkjh\nonetwothree\nthreetwoone\none\nzzonneyy\none\nnone\ntwenty\nten\n","output":"YES\nYES\nNO\nYES\nNO\n"}],"submitUrl":"https://codeforces.com/contest/1278/submit","language":"python"}