{"title":{"en":"B. Scenes From a Memory","ru":"B. Scenes From a Memory"},"contestId":"1562","problemIndex":"B","timeLimit":{"en":"1 second","ru":"1 секунда"},"memLimit":{"en":"256 megabytes","ru":"256 мегабайт"},"inputFormat":{"en":"standard input","ru":"стандартный ввод"},"outputFormat":{"en":"standard output","ru":"стандартный вывод"},"problemHtml":{"en":"<p>During the hypnosis session, Nicholas suddenly remembered a positive integer $$$n$$$, which <span class=\"tex-font-style-bf\">doesn't contain zeros in decimal notation</span>. </p><p>Soon, when he returned home, he got curious: what is the maximum number of digits that can be removed from the number so that the number becomes <span class=\"tex-font-style-bf\">not prime</span>, that is, either composite or equal to one?</p><p>For some numbers doing so is impossible: for example, for number $$$53$$$ it's impossible to delete some of its digits to obtain a not prime integer. However, <span class=\"tex-font-style-bf\">for all $$$n$$$ in the test cases of this problem, it's guaranteed that it's possible to delete some of their digits to obtain a not prime number</span>.</p><p>Note that you cannot remove all the digits from the number.</p><p>A prime number is a number that has no divisors except one and itself. A composite is a number that has more than two divisors. $$$1$$$ is neither a prime nor a composite number.</p>","ru":"<p>Во время сеанса гипноза Николас неожиданно вспомнил целое положительное число $$$n$$$, <span class=\"tex-font-style-bf\">не содержащее нулей в десятичной записи</span>.</p><p>Вскоре, когда он уже вернулся домой, ему стало интересно: какое максимальное количество цифр можно удалить из числа так, чтобы оно стало <span class=\"tex-font-style-bf\">не простым</span>, то есть либо составным, либо равным единице? Помогите ему найти ответ!</p><p>Для некоторых чисел сделать это невозможно: например, для числа $$$53$$$ невозможно удалить некоторые из его цифр, чтобы получить не простое целое число. Однако, <span class=\"tex-font-style-bf\">для всех $$$n$$$ в тестах этой задачи гарантируется, что можно удалить некоторые из их цифр, чтобы получить не простое число</span>.</p><p>Из числа нельзя удалять все цифры.</p><p>Простым называется число, которое не имеет никаких делителей, кроме единицы и самого себя. Составным называется число, которое имеет более двух делителей. $$$1$$$ не является ни простым, ни составным числом.</p>"},"inSpecsHtml":{"en":"<div class=\"section-title\">Input</div><p>Each test contains multiple test cases.</p><p>The first line contains one positive integer $$$t$$$ ($$$1 \\le t \\le 10^3$$$), denoting the number of test cases. Description of the test cases follows.</p><p>The first line of each test case contains one positive integer $$$k$$$ ($$$1 \\le k \\le 50$$$)&nbsp;— the number of digits in the number.</p><p>The second line of each test case contains a positive integer $$$n$$$, which doesn't contain zeros in decimal notation ($$$10^{k-1} \\le n &lt; 10^{k}$$$). It is guaranteed that it is always possible to remove less than $$$k$$$ digits to make the number not prime.</p><p>It is guaranteed that the sum of $$$k$$$ over all test cases does not exceed $$$10^4$$$.</p>","ru":"<div class=\"section-title\">Входные данные</div><p>Каждый тест содержит несколько наборов входных данных. </p><p>В первой строке находится одно целое положительное число $$$t$$$ ($$$1 \\le t \\le 10^3$$$)&nbsp;— количество наборов входных данных. Описание наборов входных данных приведено ниже.</p><p>В первой строке каждого набора входных данных находится одно целое положительное число $$$k$$$ ($$$1 \\le k \\le 50$$$)&nbsp;— количество цифр в числе.</p><p>Во второй строке каждого набора входных данных находится целое положительное число $$$n$$$, не содержащее нулей в десятичной записи ($$$10^{k-1} \\le n &lt; 10^{k}$$$). Гарантируется, что из числа можно удалить менее, чем $$$k$$$ цифр, чтобы оно стало не простым.</p><p>Гарантируется, что сумма $$$k$$$ по всем наборам входных данных не превосходит $$$10^4$$$.</p>"},"outSpecsHtml":{"en":"<div class=\"section-title\">Output</div><p>For every test case, print two numbers in two lines. In the first line print the number of digits, that you <span class=\"tex-font-style-bf\">have left</span> in the number. In the second line print the digits left after all delitions. </p><p>If there are multiple solutions, print any.</p>","ru":"<div class=\"section-title\">Выходные данные</div><p>Для каждого набора входных данных выведите в отдельных двух строках выведите два числа: количество цифр, которое вы <span class=\"tex-font-style-bf\">оставили</span> в первой строке, и оставшееся после удалений число во второй.</p><p>Если существует несколько правильных вариантов ответа, вы можете вывести любой.</p>"},"noteHtml":{"en":"<div class=\"section-title\">Note</div><p>In the first test case, you can't delete $$$2$$$ digits from the number $$$237$$$, as all the numbers $$$2$$$, $$$3$$$, and $$$7$$$ are prime. However, you can delete $$$1$$$ digit, obtaining a number $$$27 = 3^3$$$.</p><p>In the second test case, you can delete all digits except one, as $$$4 = 2^2$$$ is a composite number.</p>","ru":"<div class=\"section-title\">Примечание</div><p>В первом наборе входных данных нельзя удалить $$$2$$$ цифры из числа $$$237$$$, так как все числа $$$2$$$, $$$3$$$ и $$$7$$$ являются простыми. Однако вы можете удалить $$$1$$$ цифру, получив число $$$27 = 3^3$$$.</p><p>Во втором наборе входных данных можно удалить все цифры, кроме одной, так как $$$4 = 2^2$$$ — составное число.</p>"},"sampleTestcases":[{"id":1637905581385,"input":"7\n3\n237\n5\n44444\n3\n221\n2\n35\n3\n773\n1\n4\n30\n626221626221626221626221626221\n","output":"2\n27\n1\n4\n1\n1\n2\n35\n2\n77\n1\n4\n1\n6\n"}],"submitUrl":"https://codeforces.com/contest/1562/submit","language":"python"}